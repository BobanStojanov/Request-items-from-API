{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Playing with array\\\\src\\\\components\\\\fetch\\\\GetFetch.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useCallback, useEffect } from \"react\";\nimport Button from \"../UI/Button.js\";\nimport ListData from \"./ListData.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GetFetch = () => {\n  _s();\n\n  const [peoples, setPeoples] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(\"https://react-exercise-4bddf-default-rtdb.firebaseio.com/objects/first.json\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n      console.log(data);\n      const loadedData = [];\n\n      for (const key in data) {\n        loadedData.push({\n          id: key,\n          title: data[key].title\n        });\n      } // const transformedData = data.results.map((dataFetch) => {\n      //   return {\n      //     id: dataFetch.id,\n      //     name: dataFetch.name,\n      //     anything: dataFetch.anything,\n      //   };\n      // });\n\n\n      console.log(loadedData);\n      setPeoples(loadedData);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchHandler();\n  }, [fetchHandler]);\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Found no data.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 17\n  }, this);\n\n  if (peoples.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(ListData, {\n      peoples: peoples\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: fetchHandler,\n      value: \"Fetch\",\n      children: \"fetch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GetFetch, \"UCPfLL040CsoJOJfKhpkfNSGhhE=\");\n\n_c = GetFetch;\nexport default GetFetch;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetFetch\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Playing with array/src/components/fetch/GetFetch.js"],"names":["useState","useCallback","useEffect","Button","ListData","GetFetch","peoples","setPeoples","isLoading","setIsLoading","error","setError","fetchHandler","response","fetch","ok","Error","data","json","console","log","loadedData","key","push","id","title","message","content","length"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,QAAiD,OAAjD;AAEA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,QAAP,MAAqB,eAArB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMY,YAAY,GAAGX,WAAW,CAAC,YAAY;AAC3CQ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAME,QAAQ,GAAG,MAAMC,KAAK,CAC1B,6EAD0B,CAA5B;;AAIA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,YAAMI,UAAU,GAAG,EAAnB;;AAEA,WAAK,MAAMC,GAAX,IAAkBL,IAAlB,EAAwB;AACtBI,QAAAA,UAAU,CAACE,IAAX,CAAgB;AACdC,UAAAA,EAAE,EAAEF,GADU;AAEdG,UAAAA,KAAK,EAAER,IAAI,CAACK,GAAD,CAAJ,CAAUG;AAFH,SAAhB;AAID,OAnBC,CAqBF;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYC,UAAZ;AACAd,MAAAA,UAAU,CAACc,UAAD,CAAV;AACD,KA9BD,CA8BE,OAAOX,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAACD,KAAK,CAACgB,OAAP,CAAR;AACD;;AACDjB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GArC+B,EAqC7B,EArC6B,CAAhC;AAuCAP,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,YAAY;AACb,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;;AAIA,MAAIe,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;;AAEA,MAAIrB,OAAO,CAACsB,MAAR,GAAiB,CAArB,EAAwB;AACtBD,IAAAA,OAAO,gBAAG,QAAC,QAAD;AAAU,MAAA,OAAO,EAAErB;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AAED,MAAII,KAAJ,EAAW;AACTiB,IAAAA,OAAO,gBAAG;AAAA,gBAAIjB;AAAJ;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AAED,MAAIF,SAAJ,EAAe;AACbmB,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEf,YAAjB;AAA+B,MAAA,KAAK,EAAC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,gBAAUe;AAAV;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAtED;;GAAMtB,Q;;KAAAA,Q;AAwEN,eAAeA,QAAf","sourcesContent":["import { useState, useCallback, useEffect } from \"react\";\r\n\r\nimport Button from \"../UI/Button.js\";\r\nimport ListData from \"./ListData.js\";\r\n\r\nconst GetFetch = () => {\r\n  const [peoples, setPeoples] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchHandler = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(\r\n        \"https://react-exercise-4bddf-default-rtdb.firebaseio.com/objects/first.json\"\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      console.log(data);\r\n      const loadedData = [];\r\n\r\n      for (const key in data) {\r\n        loadedData.push({\r\n          id: key,\r\n          title: data[key].title,\r\n        });\r\n      }\r\n\r\n      // const transformedData = data.results.map((dataFetch) => {\r\n      //   return {\r\n      //     id: dataFetch.id,\r\n      //     name: dataFetch.name,\r\n      //     anything: dataFetch.anything,\r\n      //   };\r\n      // });\r\n      console.log(loadedData);\r\n      setPeoples(loadedData);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchHandler();\r\n  }, [fetchHandler]);\r\n\r\n  let content = <p>Found no data.</p>;\r\n\r\n  if (peoples.length > 0) {\r\n    content = <ListData peoples={peoples} />;\r\n  }\r\n\r\n  if (error) {\r\n    content = <p>{error}</p>;\r\n  }\r\n\r\n  if (isLoading) {\r\n    content = <p>Loading...</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={fetchHandler} value=\"Fetch\">\r\n        fetch\r\n      </Button>\r\n      <section>{content}</section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetFetch;\r\n"]},"metadata":{},"sourceType":"module"}