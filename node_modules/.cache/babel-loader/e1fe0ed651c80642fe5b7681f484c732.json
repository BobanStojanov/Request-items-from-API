{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Valtech Task\\\\src\\\\components\\\\fetch\\\\GetFetch.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useCallback, useEffect } from \"react\"; // import Button from \"../UI/Button.js\";\n// import ListData from \"./ListData.js\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GetFetch = () => {\n  _s();\n\n  // const [peoples, setPeoples] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [img, setImg] = useState();\n  const [imagesArray, setImagesArray] = useState([]);\n  const fetchHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(\"https://picsum.photos/200/300.jpg\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      } // const data = await response.json();\n\n\n      const imageBlob = await response.blob();\n      console.log(imageBlob);\n      const imageObjectURL = URL.createObjectURL(imageBlob);\n      setImg(imageObjectURL);\n\n      for (const key in imagesArray) {\n        setImagesArray.push({\n          id: key,\n          title: imagesArray[key].width,\n          array: imagesArray[key].height\n        });\n      } // const transformedData = data.results.map((dataFetch) => {\n      //   return {\n      //     id: dataFetch.id,\n      //     name: dataFetch.name,\n      //     anything: dataFetch.anything,\n      //   };\n      // });\n      // console.log(loadedData);\n      // setPeoples(loadedData);\n\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchHandler();\n  }, [fetchHandler]);\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Found no data.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 17\n  }, this); // if (peoples.length > 0) {\n  //   content = <ListData peoples={peoples} />;\n  // }\n  // if (img.length > 0) {\n  //   content = <img src={img} alt=\"icons\" />;\n  // }\n\n\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: img,\n      alt: \"icons\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GetFetch, \"/pqI0KdMD4TftMlJ4oGYeD/T6DQ=\");\n\n_c = GetFetch;\nexport default GetFetch;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetFetch\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Valtech Task/src/components/fetch/GetFetch.js"],"names":["useState","useCallback","useEffect","GetFetch","isLoading","setIsLoading","error","setError","img","setImg","imagesArray","setImagesArray","fetchHandler","response","fetch","ok","Error","imageBlob","blob","console","log","imageObjectURL","URL","createObjectURL","key","push","id","title","width","array","height","message","content"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,QAAiD,OAAjD,C,CAEA;AACA;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACQ,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,EAA9B;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAMY,YAAY,GAAGX,WAAW,CAAC,YAAY;AAC3CI,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAD,CAA5B;;AAEA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD,OALC,CAOF;;;AACA,YAAMC,SAAS,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAxB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AAEA,YAAMI,cAAc,GAAGC,GAAG,CAACC,eAAJ,CAAoBN,SAApB,CAAvB;AACAR,MAAAA,MAAM,CAACY,cAAD,CAAN;;AAEA,WAAK,MAAMG,GAAX,IAAkBd,WAAlB,EAA+B;AAC7BC,QAAAA,cAAc,CAACc,IAAf,CAAoB;AAClBC,UAAAA,EAAE,EAAEF,GADc;AAElBG,UAAAA,KAAK,EAAEjB,WAAW,CAACc,GAAD,CAAX,CAAiBI,KAFN;AAGlBC,UAAAA,KAAK,EAAEnB,WAAW,CAACc,GAAD,CAAX,CAAiBM;AAHN,SAApB;AAKD,OArBC,CAuBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,KAhCD,CAgCE,OAAOxB,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAACD,KAAK,CAACyB,OAAP,CAAR;AACD;;AACD1B,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAvC+B,EAuC7B,EAvC6B,CAAhC;AAyCAH,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,YAAY;AACb,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;;AAIA,MAAIoB,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd,CApDqB,CAsDrB;AACA;AACA;AAEA;AACA;AACA;;;AAEA,MAAI1B,KAAJ,EAAW;AACT0B,IAAAA,OAAO,gBAAG;AAAA,gBAAI1B;AAAJ;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AAED,MAAIF,SAAJ,EAAe;AACb4B,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AAED,sBACE;AAAA,4BACE;AAAK,MAAA,GAAG,EAAExB,GAAV;AAAe,MAAA,GAAG,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAA,gBAAUwB;AAAV;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA7ED;;GAAM7B,Q;;KAAAA,Q;AA+EN,eAAeA,QAAf","sourcesContent":["import { useState, useCallback, useEffect } from \"react\";\r\n\r\n// import Button from \"../UI/Button.js\";\r\n// import ListData from \"./ListData.js\";\r\n\r\nconst GetFetch = () => {\r\n  // const [peoples, setPeoples] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [img, setImg] = useState();\r\n  const [imagesArray, setImagesArray] = useState([]);\r\n\r\n  const fetchHandler = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(\"https://picsum.photos/200/300.jpg\");\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n\r\n      // const data = await response.json();\r\n      const imageBlob = await response.blob();\r\n\r\n      console.log(imageBlob);\r\n\r\n      const imageObjectURL = URL.createObjectURL(imageBlob);\r\n      setImg(imageObjectURL);\r\n\r\n      for (const key in imagesArray) {\r\n        setImagesArray.push({\r\n          id: key,\r\n          title: imagesArray[key].width,\r\n          array: imagesArray[key].height,\r\n        });\r\n      }\r\n\r\n      // const transformedData = data.results.map((dataFetch) => {\r\n      //   return {\r\n      //     id: dataFetch.id,\r\n      //     name: dataFetch.name,\r\n      //     anything: dataFetch.anything,\r\n      //   };\r\n      // });\r\n      // console.log(loadedData);\r\n      // setPeoples(loadedData);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchHandler();\r\n  }, [fetchHandler]);\r\n\r\n  let content = <p>Found no data.</p>;\r\n\r\n  // if (peoples.length > 0) {\r\n  //   content = <ListData peoples={peoples} />;\r\n  // }\r\n\r\n  // if (img.length > 0) {\r\n  //   content = <img src={img} alt=\"icons\" />;\r\n  // }\r\n\r\n  if (error) {\r\n    content = <p>{error}</p>;\r\n  }\r\n\r\n  if (isLoading) {\r\n    content = <p>Loading...</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <img src={img} alt=\"icons\" />\r\n      {/* <Button onClick={fetchHandler} value=\"Fetch\"></Button> */}\r\n      <section>{content}</section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetFetch;\r\n"]},"metadata":{},"sourceType":"module"}