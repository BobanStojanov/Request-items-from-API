{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Valtech Task\\\\src\\\\components\\\\fetch\\\\GetFetch.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useCallback, useEffect } from \"react\"; // import Button from \"../UI/Button.js\";\n// import ListData from \"./ListData.js\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GetFetch = () => {\n  _s();\n\n  const [img, setImg] = useState([]); // const [imagesArray, setImagesArray] = useState([]);\n\n  const fetchHandler = useCallback(async () => {\n    try {\n      const list = await fetch(\"https://picsum.photos/v2/list\");\n      const images = await list.json();\n\n      if (!list.ok) {\n        throw new Error(\"Something went wrong!\");\n      } // const data = await response.json();\n      // const imagesBlob = await response.blob();\n\n\n      console.log(images); // const imageObjectURL = URL.createObjectURL(imagesBlob);\n\n      setImg(images);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n  useEffect(() => {\n    fetchHandler();\n  }, [fetchHandler]); // for (let images = 0; images >= img.length; images++) {\n  //   let tag = <img src={img} alt=\"icons\" />;\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [img.map(function (o) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: o.download_url,\n          alt: \"icons\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 14\n        }, this)\n      }, \"item-\" + o.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: img,\n      alt: \"icons\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GetFetch, \"rEC5VWPNteKKKlK+yh/3k1JDb0E=\");\n\n_c = GetFetch;\nexport default GetFetch;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetFetch\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Valtech Task/src/components/fetch/GetFetch.js"],"names":["useState","useCallback","useEffect","GetFetch","img","setImg","fetchHandler","list","fetch","images","json","ok","Error","console","log","error","map","o","download_url","id"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,QAAiD,OAAjD,C,CAEA;AACA;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBL,QAAQ,CAAC,EAAD,CAA9B,CADqB,CAErB;;AAEA,QAAMM,YAAY,GAAGL,WAAW,CAAC,YAAY;AAC3C,QAAI;AACF,YAAMM,IAAI,GAAG,MAAMC,KAAK,CAAC,+BAAD,CAAxB;AACA,YAAMC,MAAM,GAAG,MAAMF,IAAI,CAACG,IAAL,EAArB;;AAEA,UAAI,CAACH,IAAI,CAACI,EAAV,EAAc;AACZ,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD,OANC,CAQF;AACA;;;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ,EAXE,CAaF;;AACAJ,MAAAA,MAAM,CAACI,MAAD,CAAN;AACD,KAfD,CAeE,OAAOM,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;AACF,GAnB+B,EAmB7B,EAnB6B,CAAhC;AAqBAb,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,YAAY;AACb,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT,CAzBqB,CA6BrB;AACA;AACA;;AAEA,sBACE;AAAA,eACGF,GAAG,CAACY,GAAJ,CAAQ,UAAUC,CAAV,EAAa;AACpB,0BACE;AAAA,+BACG;AAAK,UAAA,GAAG,EAAEA,CAAC,CAACC,YAAZ;AAA0B,UAAA,GAAG,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA;AADH,SAAU,UAAUD,CAAC,CAACE,EAAtB;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KANA,CADH,eAYE;AAAK,MAAA,GAAG,EAAEf,GAAV;AAAe,MAAA,GAAG,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAlDD;;GAAMD,Q;;KAAAA,Q;AAoDN,eAAeA,QAAf","sourcesContent":["import { useState, useCallback, useEffect } from \"react\";\r\n\r\n// import Button from \"../UI/Button.js\";\r\n// import ListData from \"./ListData.js\";\r\n\r\nconst GetFetch = () => {\r\n  const [img, setImg] = useState([]);\r\n  // const [imagesArray, setImagesArray] = useState([]);\r\n\r\n  const fetchHandler = useCallback(async () => {\r\n    try {\r\n      const list = await fetch(\"https://picsum.photos/v2/list\");\r\n      const images = await list.json();\r\n\r\n      if (!list.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n\r\n      // const data = await response.json();\r\n      // const imagesBlob = await response.blob();\r\n\r\n      console.log(images);\r\n\r\n      // const imageObjectURL = URL.createObjectURL(imagesBlob);\r\n      setImg(images);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchHandler();\r\n  }, [fetchHandler]);\r\n\r\n  // for (let images = 0; images >= img.length; images++) {\r\n  //   let tag = <img src={img} alt=\"icons\" />;\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      {img.map(function (o) {\r\n        return (\r\n          <div key={\"item-\" + o.id}>\r\n            {<img src={o.download_url} alt=\"icons\" />}\r\n          </div>\r\n        );\r\n      })}\r\n\r\n      {/* {img.map((item) => {\r\n        return <img src={item} alt=\"icons\" />;\r\n      })} */}\r\n      <img src={img} alt=\"icons\" />\r\n      {/* <Button onClick={fetchHandler} value=\"Fetch\"></Button> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetFetch;\r\n"]},"metadata":{},"sourceType":"module"}